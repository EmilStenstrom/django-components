name: Run tests

on:
  push:
    branches:
      - 'master'
  pull_request:
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-20.04
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']

    steps:
    - uses: actions/checkout@v4

    # Python tests
    - name: '[py] Set up Python ${{ matrix.python-version }}'
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        cache: "pip"
    - name: '[py] Install dependencies'
      run: |
        python -m pip install --upgrade pip
        python -m pip install tox tox-gh-actions django_cypress
    - name: '[py] Run unit tests'
      run: tox

    # JS tests
    - name: '[js] Set up Node'
      uses: actions/setup-node@v4
      with:
        node-version: latest
    - name: '[js] Install dependencies'
      run: |
        cd ./src/django_components_js
        npm ci
    - name: '[js] Run unit tests'
      run: |
        cd ./src/django_components_js
        npm run test

    # TODO: CHECK IF THIS WORKS!!
    # See https://learn.cypress.io/tutorials/running-our-tests-with-github-actions
    # - name: Run Cypress tests
    #   uses: cypress-io/github-action@v3
    #   with:
    #     project: ./cypress
    #     browser: chrome
    #     build: npm build # && pip install django django_cypress
    #     start: yarn start
    #     wait-on: "http://localhost:3000"


    # TODO OR THIS, AS GIVEN BY CHATGPT
    # See https://chatgpt.com/share/3610e921-176c-403c-b96e-20bc635f9f9c
    # Also see https://www.browserstack.com/guide/test-github-actions-locally
    #
    # # Step 3: Set up Node.js for Cypress and Install Dependencies
    # - name: Set up Node.js
    #   uses: actions/setup-node@v2
    #   with:
    #     node-version: '16'

    # - name: Install Cypress
    #   run: npm install

    # # Step 4: Set up Django environment variables
    # - name: Set Django environment variables
    #   run: |
    #     echo "DATABASE_URL=postgres://postgres:postgres@localhost:5432/test_db" >> .env
    #     echo "DJANGO_SETTINGS_MODULE=myproject.settings" >> .env
    #     echo "SECRET_KEY=test" >> .env
    #     echo "DEBUG=True" >> .env

    # # Step 5: Run Django migrations and start the server
    # - name: Run Django migrations
    #   run: python manage.py migrate

    # - name: Start Django server
    #   run: |
    #     python manage.py runserver 0.0.0.0:8000 &
    #   env:
    #     DJANGO_SETTINGS_MODULE: myproject.settings

    # # Step 6: Wait for the Django server to start
    # - name: Wait for Django server to be available
    #   run: timeout 30s bash -c 'until echo > /dev/tcp/localhost/8000; do sleep 1; done'

    # # Step 7: Run Cypress tests
    # - name: Run Cypress tests
    #   run: npx cypress run