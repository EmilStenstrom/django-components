(()=>{var m=n=>new DOMParser().parseFromString(n,"text/html").documentElement.textContent,S=Array.isArray,d=n=>typeof n=="function",H=n=>n!==null&&typeof n=="object",b=n=>(H(n)||d(n))&&d(n.then)&&d(n.catch);function N(n,i){try{return i?n.apply(null,i):n()}catch(s){L(s)}}function y(n,i){if(d(n)){let s=N(n,i);return s&&b(s)&&s.catch(c=>{L(c)}),[s]}if(S(n)){let s=[];for(let c=0;c<n.length;c++)s.push(y(n[c],i));return s}else console.warn(`[Components] Invalid value type passed to callWithAsyncErrorHandling(): ${typeof n}`)}function L(n){console.error(n)}var M=n=>{let i=new MutationObserver(s=>{for(let c of s)c.type==="childList"&&c.addedNodes.forEach(l=>{l.nodeName==="SCRIPT"&&l.hasAttribute("data-djc")&&n(l)})});return i.observe(document,{childList:!0,subtree:!0}),i};var T=()=>{let n=new Set,i=new Set,s={},c={},l=t=>{let e=new DOMParser().parseFromString(t,"text/html").querySelector("script");if(!e)throw Error("[Components] Failed to extract <script> tag. Make sure that the string contains <script><\/script> and is a valid HTML");return e},F=t=>{let e=new DOMParser().parseFromString(t,"text/html").querySelector("link");if(!e)throw Error("[Components] Failed to extract <link> tag. Make sure that the string contains <link></link> and is a valid HTML");return e},f=t=>{let e=document.createElement(t.tagName);e.innerHTML=t.innerHTML;for(let o of t.attributes)e.setAttributeNode(o.cloneNode());return e},h=t=>{let e=l(t),o=e.getAttribute("src");if(!o||x("js",o))return;p("js",o);let a=f(e),r=e.getAttribute("async")!=null||e.getAttribute("defer")!=null||e.getAttribute("type")==="module";a.async=r;let g=new Promise((u,E)=>{a.onload=()=>{u()},globalThis.document.body.append(a)});return{el:a,promise:g}},C=t=>{let e=F(t),o=e.getAttribute("href");if(!o||x("css",o))return;let a=f(e);return globalThis.document.head.append(a),p("css",o),{el:a,promise:Promise.resolve()}},p=(t,e)=>{if(t!=="js"&&t!=="css")throw Error(`[Components] markScriptLoaded received invalid script type '${t}'. Must be one of 'js', 'css'`);(t==="js"?n:i).add(e)},x=(t,e)=>{if(t!=="js"&&t!=="css")throw Error(`[Components] isScriptLoaded received invalid script type '${t}'. Must be one of 'js', 'css'`);return(t==="js"?n:i).has(e)},w=(t,e)=>{s[t]=e},j=(t,e,o)=>{let a=`${t}:${e}`;c[a]=o},A=(t,e,o)=>{let a=s[t];if(!a)throw Error(`[Components] '${t}': No component registered for that name`);let r=Array.from(document.querySelectorAll(`[data-comp-id-${e}]`));if(!r.length)throw Error(`[Components] '${t}': No elements with component ID '${e}' found`);let g=`${t}:${o}`,u=c[g];if(!u)throw Error(`[Components] '${t}': Cannot find input for hash '${o}'`);let E=u(),v={name:t,id:e,els:r},[P]=y(a,[E,v]);return P},k=async t=>{let e=t.toLoadCssTags.map(r=>m(r)),o=t.toLoadJsTags.map(r=>m(r));t.loadedCssUrls.forEach(r=>p("css",r)),t.loadedJsUrls.forEach(r=>p("js",r)),Promise.all(e.map(r=>C(r))).catch(console.error);let a=Promise.all(o.map(r=>h(r))).catch(console.error)};return M(t=>{let e=JSON.parse(t.text);k(e)}),{callComponent:A,registerComponent:w,registerComponentData:j,loadJs:h,loadCss:C,markScriptLoaded:p}};var $={manager:T(),createComponentsManager:T,unescapeJs:m};globalThis.Components=$;})();
